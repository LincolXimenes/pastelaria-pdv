openapi: 3.0.3
info:
  title: API Pastelaria PDV
  version: 1.0.0
  description: API REST para gerenciar pedidos, produtos, clientes e usuários de uma pastelaria.

servers:
  - url: http://localhost:5000/api

paths:
  /users/register:
    post:
      summary: Criar novo usuário (apenas admin)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuário criado com sucesso
        '400':
          description: Email já está em uso
        '500':
          description: Erro interno

  /users/login:
    post:
      summary: Login de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - senha
              properties:
                email:
                  type: string
                senha:
                  type: string
      responses:
        '200':
          description: Login bem-sucedido
        '401':
          description: Credenciais inválidas
        '500':
          description: Erro interno

  /users/{id}:
    get:
      summary: Buscar usuário por ID (autenticado)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Dados do usuário
    put:
      summary: Atualizar usuário (autenticado)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuário atualizado
    delete:
      summary: Deletar usuário (apenas admin)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Usuário deletado

  /clientes/register:
    post:
      summary: Registrar novo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        '201':
          description: Cliente criado

  /clientes/login:
    post:
      summary: Login de cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - senha
              properties:
                email:
                  type: string
                senha:
                  type: string
      responses:
        '200':
          description: Login bem-sucedido

  /clientes/me:
    get:
      summary: Buscar próprio perfil (cliente autenticado)
      responses:
        '200':
          description: Dados do cliente
    put:
      summary: Atualizar próprio perfil (cliente autenticado)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        '200':
          description: Cliente atualizado
    delete:
      summary: Deletar próprio perfil (cliente autenticado)
      responses:
        '204':
          description: Cliente removido

  /clientes:
    get:
      summary: Listar clientes (apenas admin)
      responses:
        '200':
          description: Lista de clientes

  /clientes/{id}:
    get:
      summary: Buscar cliente por ID (apenas admin)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cliente encontrado
    put:
      summary: Atualizar cliente (apenas admin)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        '200':
          description: Cliente atualizado
    delete:
      summary: Deletar cliente (apenas admin)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cliente removido

  /produtos:
    post:
      summary: Criar produto (admin ou funcionário)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produto'
      responses:
        '201':
          description: Produto criado
    get:
      summary: Listar produtos
      responses:
        '200':
          description: Lista de produtos

  /produtos/search:
    get:
      summary: Buscar produto por nome
      parameters:
        - name: nome
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Produtos encontrados

  /produtos/{id}:
    get:
      summary: Buscar produto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Produto encontrado
    put:
      summary: Atualizar produto (admin ou funcionário)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produto'
      responses:
        '200':
          description: Produto atualizado
    delete:
      summary: Deletar produto (apenas admin)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Produto removido

  /produtos/{id}/estoque:
    put:
      summary: Atualizar estoque do produto (admin ou funcionário)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quantidade
              properties:
                quantidade:
                  type: integer
      responses:
        '200':
          description: Estoque atualizado

  /pedidos:
    post:
      summary: Criar pedido
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pedido'
      responses:
        '201':
          description: Pedido criado
    get:
      summary: Listar pedidos (apenas admin)
      responses:
        '200':
          description: Lista de pedidos

  /pedidos/{id}:
    get:
      summary: Buscar pedido por ID (autenticado)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pedido encontrado
    delete:
      summary: Cancelar pedido (apenas admin)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Pedido removido

  /pedidos/{id}/status:
    patch:
      summary: Atualizar status do pedido (autenticado)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [pendente, em preparação, pronto, enviado, concluído]
      responses:
        '200':
          description: Status atualizado

  /pedidos/{id}/whatsapp:
    get:
      summary: Gerar link do WhatsApp para o pedido (autenticado)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Link gerado

components:
  schemas:
    User:
      type: object
      required:
        - nome
        - email
        - senha
      properties:
        nome:
          type: string
        email:
          type: string
        senha:
          type: string
        role:
          type: string
          enum: [admin, gerente, funcionario]
        isAdmin:
          type: boolean

    Cliente:
      type: object
      required:
        - nome
        - email
        - senha
        - telefone
      properties:
        nome:
          type: string
        email:
          type: string
        senha:
          type: string
        telefone:
          type: string
        endereco:
          type: object
          properties:
            rua:
              type: string
            numero:
              type: string
            complemento:
              type: string
            bairro:
              type: string
            cidade:
              type: string
            estado:
              type: string
            cep:
              type: string
        observacoes:
          type: string

    Produto:
      type: object
      required:
        - nome
        - preco
      properties:
        nome:
          type: string
        descricao:
          type: string
        preco:
          type: number
          format: float
        categoria:
          type: string
        imagem:
          type: string
        emEstoque:
          type: boolean
        quantidade:
          type: integer
        destaque:
          type: boolean

    Pedido:
      type: object
      required:
        - cliente
        - produtos
        - metodoEntrega
      properties:
        cliente:
          type: string
        produtos:
          type: array
          items:
            type: object
            properties:
              produto:
                type: string
              quantidade:
                type: integer
        metodoEntrega:
          type: string
          enum: [retirada, entrega]
        taxaEntrega:
          type: number
        total:
          type: number
        status:
          type: string
          enum: [pendente, em preparação, pronto, enviado, concluído]